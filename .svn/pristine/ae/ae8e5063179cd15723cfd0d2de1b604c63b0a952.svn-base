function export_graph() {
    console.log('export_graph');
    var png = window.cy.png(true);
    
    var doc = new jsPDF();
    doc.addImage(png, 'PNG', 15, 40, 170, 200);
    doc.output('datauri');
}

/* 
This function is executed when the page finishes loading.

Consult the API: http://api.jquery.com/ready/
*/
$(document).ready(function() {
    // Cytoscape.js API: 
    // http://cytoscape.github.io/cytoscape.js/
    // $('.csweb').cytoscape({
    window.cy = cytoscape( options = {
      container: document.getElementById('csweb'),

      style: cytoscape.stylesheet()
      .selector('node')
        .css({
          //name to display
          'content': 'data(label)', 
          'shape': 'data(shape)',
          'text-valign': 'center',
          'color': '#000000',
          'text-outline-width': 0,
          'background-color': 'data(color)', 
          'font-size': 10,
          'border-color': '#000000',
          'border-width': 1
        })
      .selector('edge')
        .css({
          'target-arrow-shape': 'triangle',
          'line-color': 'data(color)',
          'source-arrow-color': 'data(color)',
          'target-arrow-color': 'data(color)',
        })
      .selector('node:selected')
        .css({
          'border-width': 3,
          'border-color': '#ff0000'
        })
      .selector('edge:selected')
        .css({
          'width': 3,
          'line-color': '#ff0000',
          'target-arrow-color': '#ff0000',
          'source-arrow-color': '#ff0000'
        }),
    
    // default layout set to be concentric
    layout: {
      name: 'concentric',
      padding: 10
    },
    
    // draw graph, handle events etc.
    ready: function(){
      // make the selection states of the elements mutable
      this.elements().selectify();
      // load the graph to display
      this.load(graph_json.graph);
      // enable user panning (hold the left mouse button to drag
      // the screen)
      this.userPanningEnabled(true);
      
      // display node data as a popup
      this.on('tap', function(evt){
        // get target
        var target = evt.cyTarget;

        // target some element other than background (node/edge)
        if ( target !== this ) {
            var popup = target.data('popup');

            if (popup == null) {
                console.log('popup null');
                return;
            }

            console.log('show_popup');

            $('#dialog').html(popup);
            $('#dialog').dialog('option', 'title', target.data('label'));
            $('#dialog').dialog('open');
        }
      });
    } // end ready: function()
    });

    //setup popup dialog for displaying dialog when nodes/edges
    //are clicked for information.
    $('#dialog').dialog({ autoOpen: false });

    //these accordions make up the side menu
    $('#accordion_graph_details').accordion({
        collapsible: true
    });

    $('#accordion_export').accordion({
        collapsible: true,
        active: false 
    });

    $('#accordion_owner').accordion({
        collapsible: true,
        active: false 
    });

    $('#accordion_sharing').accordion({
        collapsible: true,
        active: false 
    });

    $('#accordion_layouts').accordion({
        collapsible: true,
        active: false 
    });
});
